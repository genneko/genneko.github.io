<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Network on genneko</title>
    <link>https://genneko.github.io/tags/network/</link>
    <description>Recent content in Network on genneko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; Copyright 2018 - 2019 genneko</copyright>
    <lastBuildDate>Wed, 23 Jan 2019 01:22:00 +0900</lastBuildDate>
    
	<atom:link href="https://genneko.github.io/tags/network/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>WireGuard on FreeBSD Quick Look Part 2: Android Remote Access</title>
      <link>https://genneko.github.io/playing-with-bsd/networking/freebsd-wireguard-android/</link>
      <pubDate>Wed, 23 Jan 2019 01:22:00 +0900</pubDate>
      
      <guid>https://genneko.github.io/playing-with-bsd/networking/freebsd-wireguard-android/</guid>
      <description>After playing briefly with WireGuard (See previous post) on FreeBSD VNET Jails, today I tried to test it between a FreeBSD host and an Android device over the Internet.
Network Configuration  FreeBSD - WireGuard Server.
I setup a FreeBSD 11.2 droplet (VPS) on DigitalOcean for this experiment. Using wireguard and wireguard-go packages.
 Android - WireGuard Client.
Android 8.0 Phone with WireGuard App (Beta) and ConnectBot installed.
Roaming between home WiFi and 4G network.</description>
    </item>
    
    <item>
      <title>WireGuard on FreeBSD Quick Look: Testing VPN in Jail Network</title>
      <link>https://genneko.github.io/playing-with-bsd/networking/freebsd-wireguard-quicklook/</link>
      <pubDate>Sun, 20 Jan 2019 15:47:34 +0900</pubDate>
      
      <guid>https://genneko.github.io/playing-with-bsd/networking/freebsd-wireguard-quicklook/</guid>
      <description>WireGuard is a new VPN application which focuses on simplicity thus security and speed. Although it was initially developed as a Linux kernel feature, now it has a userspace implementation in Go and binary packages are available for FreeBSD.
I used this weekend to have a quick look at it on FreeBSD 12.0.
This time I focused on site-to-site VPN setup. Maybe I will try remote-access VPN configuration in the near future.</description>
    </item>
    
    <item>
      <title>Learning Spanning Tree Protocol with FreeBSD Bridges</title>
      <link>https://genneko.github.io/playing-with-bsd/networking/learning-stp/</link>
      <pubDate>Sun, 04 Nov 2018 21:19:01 +0900</pubDate>
      
      <guid>https://genneko.github.io/playing-with-bsd/networking/learning-stp/</guid>
      <description>Spanning Tree Protocol is a standard protocol for network bridges (layer-two switches) to autonomously find a logical loop-free topology and provide redundancy to the network.
Several variants have been developed since its birth, in which the most common standard is Rapid Spanning Tree Protocol (RSTP). Many managed switches implement the protocol and often enable it by default.
Although it&amp;rsquo;s quite common in the networking world where I&amp;rsquo;m living in its perimeter, it&amp;rsquo;s been something vague and unfamiliar to me for a long time.</description>
    </item>
    
    <item>
      <title>Connecting to the IPv6 Internet via tunnel (HE TunnelBroker)</title>
      <link>https://genneko.github.io/playing-with-bsd/networking/freebsd-tunnelv6-he/</link>
      <pubDate>Wed, 29 Aug 2018 15:18:01 +0900</pubDate>
      
      <guid>https://genneko.github.io/playing-with-bsd/networking/freebsd-tunnelv6-he/</guid>
      <description>I had been playing with IPv6 on various systems in early 2000s. They were mostly NetBSD (1.x) and FreeBSD (4.x) plus Windows XP. My home network had been connected to the IPv6 Internet with a router running NetBSD/hpcmips which was installed on a Windows CE handheld PC.
After a decade and a half, I decided to reconnect my home network to the IPv6 Internet.
Unfortunately, native IPv6 service is still unavailable for me.</description>
    </item>
    
    <item>
      <title>Route-based VPN with FreeBSD-11.1&#39;s IPsec VTI</title>
      <link>https://genneko.github.io/playing-with-bsd/networking/freebsd-vti-ipsec/</link>
      <pubDate>Thu, 22 Jun 2017 15:09:50 +0900</pubDate>
      
      <guid>https://genneko.github.io/playing-with-bsd/networking/freebsd-vti-ipsec/</guid>
      <description>I have managed to setup route-based IPsec VPN with FreeBSD-11.1 RC3, which had introduced ipsec virtual tunnel interface if_ipsec(4). Here is a record of my experiment just for your information.
Prerequisite  FreeBSD-11.1-RC3/amd64 Generic kernel No special packages/ports (just added sudo and a few other must-have utilities)  Network configuration NOTE: The following text shows bsd1 configurations only.
 10.0.0.1 10.0.0.2 192.168.10.0/24 --- [bsd1] ----- /// ----- [bsd2] --- 192.</description>
    </item>
    
  </channel>
</rss>